-- SQL pour créer les tables de profils et actions
-- Exécutez ce code dans le SQL Editor de votre dashboard Supabase

-- Table des profils utilisateurs
CREATE TABLE IF NOT EXISTS public.profiles (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    profile_id TEXT UNIQUE NOT NULL,
    profile_name TEXT NOT NULL,
    description TEXT,
    permissions TEXT[] DEFAULT '{}',
    default_locale TEXT DEFAULT 'fr',
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Table des numéros de téléphone associés aux profils
CREATE TABLE IF NOT EXISTS public.profile_phones (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    profile_id TEXT NOT NULL REFERENCES public.profiles(profile_id) ON DELETE CASCADE,
    phone_number TEXT NOT NULL,
    is_primary BOOLEAN DEFAULT false,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    UNIQUE(profile_id, phone_number)
);

-- Table des actions disponibles
CREATE TABLE IF NOT EXISTS public.actions (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    action_id TEXT UNIQUE NOT NULL,
    name TEXT NOT NULL,
    description TEXT,
    category TEXT DEFAULT 'general',
    required_permissions TEXT[] DEFAULT '{}',
    parameters JSONB DEFAULT '{}',
    database_operations JSONB DEFAULT '[]',
    response_format JSONB DEFAULT '{}',
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Table des permissions (pour référence)
CREATE TABLE IF NOT EXISTS public.permissions (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    permission_id TEXT UNIQUE NOT NULL,
    name TEXT NOT NULL,
    description TEXT,
    category TEXT DEFAULT 'general',
    is_active BOOLEAN DEFAULT true
);

-- Table des liens entre entités
CREATE TABLE IF NOT EXISTS public.entity_links (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    entity_name TEXT UNIQUE NOT NULL,
    description TEXT,
    fields JSONB DEFAULT '[]',
    relationships JSONB DEFAULT '{}',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Table de journalisation des actions exécutées
CREATE TABLE IF NOT EXISTS public.action_logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    profile_id TEXT REFERENCES public.profiles(profile_id),
    phone_number TEXT,
    action_id TEXT REFERENCES public.actions(action_id),
    parameters JSONB DEFAULT '{}',
    execution_status TEXT DEFAULT 'pending',
    response_data JSONB,
    error_message TEXT,
    execution_time INTEGER,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Ajouter des commentaires
COMMENT ON TABLE public.profiles IS 'Profils utilisateurs avec permissions';
COMMENT ON TABLE public.profile_phones IS 'Numéros de téléphone associés aux profils';
COMMENT ON TABLE public.actions IS 'Actions disponibles avec configuration';
COMMENT ON TABLE public.permissions IS 'Référence des permissions disponibles';
COMMENT ON TABLE public.entity_links IS 'Configuration des liens entre entités de la base';
COMMENT ON TABLE public.action_logs IS 'Journal des actions exécutées';

-- Créer des indexes pour améliorer les performances
CREATE INDEX IF NOT EXISTS idx_profiles_profile_id ON public.profiles(profile_id);
CREATE INDEX IF NOT EXISTS idx_profiles_active ON public.profiles(is_active);
CREATE INDEX IF NOT EXISTS idx_profile_phones_number ON public.profile_phones(phone_number);
CREATE INDEX IF NOT EXISTS idx_profile_phones_profile_id ON public.profile_phones(profile_id);
CREATE INDEX IF NOT EXISTS idx_actions_action_id ON public.actions(action_id);
CREATE INDEX IF NOT EXISTS idx_actions_category ON public.actions(category);
CREATE INDEX IF NOT EXISTS idx_actions_active ON public.actions(is_active);
CREATE INDEX IF NOT EXISTS idx_action_logs_profile_id ON public.action_logs(profile_id);
CREATE INDEX IF NOT EXISTS idx_action_logs_phone_number ON public.action_logs(phone_number);
CREATE INDEX IF NOT EXISTS idx_action_logs_action_id ON public.action_logs(action_id);
CREATE INDEX IF NOT EXISTS idx_action_logs_status ON public.action_logs(execution_status);
CREATE INDEX IF NOT EXISTS idx_action_logs_created_at ON public.action_logs(created_at);

-- Insérer les permissions de base
INSERT INTO public.permissions (permission_id, name, description, category) VALUES
('super_admin', 'Super Administrateur', 'Accès complet à toutes les fonctionnalités', 'admin'),
('profile_management', 'Gestion des profils', 'Créer, modifier, supprimer des profils', 'admin'),
('view_catechumenes', 'Voir les catéchumènes', 'Consulter la liste des catéchumènes', 'catechumene'),
('create_catechumenes', 'Créer des catéchumènes', 'Ajouter de nouveaux catéchumènes', 'catechumene'),
('edit_catechumenes', 'Modifier les catéchumènes', 'Mettre à jour les informations des catéchumènes', 'catechumene'),
('manage_classes', 'Gérer les classes', 'Administrer les classes et horaires', 'class'),
('view_classes', 'Voir les classes', 'Consulter les informations des classes', 'class'),
('view_parents', 'Voir les parents', 'Consulter les informations des parents', 'parent'),
('view_parents_restricted', 'Voir les parents (restreint)', 'Voir uniquement ses propres informations parentales', 'parent'),
('view_renseignements', 'Voir les renseignements', 'Consulter les renseignements disponibles', 'content'),
('manage_renseignements', 'Gérer les renseignements', 'Créer, modifier, supprimer des renseignements', 'content'),
('view_class_schedule', 'Voir les horaires', 'Consulter les horaires des classes', 'schedule')
ON CONFLICT (permission_id) DO NOTHING;

-- Insérer les liens entre entités
INSERT INTO public.entity_links (entity_name, description, fields, relationships) VALUES
('catechumenes', 'Table des catéchumènes', '["id", "nom", "prenom", "date_naissance", "classe_id", "parent_id"]', '{"classes": {"type": "many_to_one", "foreign_key": "classe_id"}, "parents": {"type": "many_to_one", "foreign_key": "parent_id"}}'),
('parents', 'Table des parents', '["id", "nom", "prenom", "telephone", "email", "code_parent"]', '{"catechumenes": {"type": "one_to_many", "local_key": "id"}}'),
('classes', 'Table des classes', '["id", "nom", "horaire", "jour", "salle", "enseignant"]', '{"catechumenes": {"type": "one_to_many", "local_key": "id"}}'),
('renseignements', 'Table des renseignements', '["id", "titre", "contenu", "categorie", "status", "priorite"]', '{}')
ON CONFLICT (entity_name) DO NOTHING;